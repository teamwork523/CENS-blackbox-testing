== General Information ==
The black box testing project for CENS AndWellness or Moblizing server. 
All testing scripts or other source code live in this repository.

To run the program: ./blackbox.py [OPTION]

== Server Requirement ==
1. User 'ohmage.d.s' should be a supervisor on both server
2. User 'ohmage.d.s' should be privileged in the class 'urn:testing:haokun' on both server
3. Campaign 'urn:campaign:ca:ucla:Mobilize:May:2011:Snack' should exist on both server

== Description ==
Here are things you need to know for this black testing program:
1. This is a testing project for CENS Moblizing and AndWellness server.
2. If any changes happen on the error code or length limit for parameters of APIs,
   please change it before running the program.
3. The general strategy for this automatic testing program is focus on three part:
   (I) Valid Cases
   (II) Invalid Cases with one invalid argument
   (III) Invalid Cases with two invalid arguments
   The reason I did not continue on three or more invalid arguments is that our
   server has a build-in ordering for checking all the parameters. Once it meets
   an invalid argument in that order, it return the corresponding error code.
   Since the two arguments checking already tests the ordering that server
   checks the request, we do not need to combine more invalid arguments.
   Another reason we stop at two invalid arguments is that if we include all the
   test cases in our program, then the running time for each API could be more
   than a day or longer. Considering efficiency issue, we only check the three
   types of cases as stated above.

== Options ==
1. -h, --help
# Show usage message.
2. -v, --version
# Show version message.
3. --api API_NAME
# API_NAME = {auth_token, user_read, user_info_read, xml, camp_cret, camp_del, camp_up, all}
# Choose a specific API to test. By default, all those APIs will be tested.
4. -f FILE, --file FILE
# Print the output to a file with filename FILE. By default, print to "./report.log"
5. -p PRINT_MODE, --print PRINT_MODE
# PRINT_MODE = {std, file, all, none}
# Choose to print to screen or save the result to a log file
6. -r RESULT, --result RESULT
# RESULT = {succ, err, all, none}
# Choose to print or save success message or print or save error message
7. -s SERVER, --server SERVER
# SERVER = {and, mob}
# and = andwellness server
# mob = mobilizing server
# Pick a server to run the program

== Contact Information ==
If you have any question, please contact 
Haokun Luo: uclakun@ucla.edu 
Xin Zhang: Fayland@ucla.edu
